{"version":3,"file":"static/js/118.1fb811a6.chunk.js","mappings":"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","sources":["API/fetchMovie.js","components/MovieDetails/MovieDetails.styled.jsx","components/BackBtn/BackBtn.jsx","components/MovieDetails/MovieDetails.jsx","additional/fenresEditor.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nasync function getFilmByKeyWord(search, page) {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en&page=${page}&include_adult=false&query=${search}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmByKeyWord };\nasync function getPopular() {\n  try {\n    const url = `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\n\nexport { getPopular };\n\nasync function getFilmDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmDetails };\n\nasync function getFilmCast(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmCast };\n\nasync function getFilmReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmReview };\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  padding-left: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 34px;\n  margin-top: 0px;\n`;\n\nexport const Score = styled.p`\n  margin: 0;\n  font-weight: bold;\n`;\n\nexport const Overview = styled.p`\n  margin: 0;\n  font-weight: bold;\n`;\n\nexport const Genres = styled.p`\n  margin: 0;\n  font-weight: bold;\n`;\nexport const Desc = styled.p`\n  margin: 0;\n  font-weight: 400;\n  line-height: 1.4;\n`;\nexport const LinksMenu = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const LinksItem = styled.li`\n  margin: 0 10px;\n`;\nexport const PosterImg = styled.img`\n  max-width: 300px;\n  height: auto;\n`;\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-right: 20px;\n`;\nexport const StyledLink = styled(NavLink)`\n  color: #fff;\n  text-decoration: none;\n  font-weight: bold;\n  background-color: #333;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &.active {\n    background-color: #b3a100;\n  }\n\n  &:hover {\n    background-color: #555;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BackBtn = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [from, setFrom] = useState('');\n\n  useEffect(() => {\n    if (state?.from) {\n      const { pathname, search } = state.from;\n      setFrom(`${pathname}${search}`);\n    }\n  }, [state?.from]);\n\n  const handleBack = () => navigate(from);\n\n  return (\n    <Wrap>\n      <Button onClick={handleBack} type=\"button\">\n        Go Back\n      </Button>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  background-color: #ea6969;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-weight: bold;\n  &:hover {\n    background-color: #ea2020;\n  }\n`;\n\nexport default BackBtn;\n","import { Outlet, useParams } from 'react-router-dom';\nimport {\n  Container,\n  Desc,\n  Genres,\n  LinksItem,\n  LinksMenu,\n  Overview,\n  Score,\n  Title,\n  PosterImg,\n  InfoWrap,\n  StyledLink,\n} from './MovieDetails.styled';\nimport { useEffect, useState } from 'react';\nimport { getFilmDetails } from 'API/fetchMovie';\nimport noPoster from 'img/noposter.jpg';\nimport { genresDetail } from 'additional/fenresEditor';\nimport BackBtn from 'components/BackBtn/BackBtn';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getFilmDetails(movieId).then(data => setMovieData(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {movieData && (\n        <>\n          <BackBtn />\n          <Container>\n            {movieData.poster_path !== null ? (\n              <PosterImg\n                src={`https://themoviedb.org/t/p/w500${movieData.poster_path}`}\n                alt={movieData.overview}\n              />\n            ) : (\n              <PosterImg src={noPoster} alt={movieData.title}></PosterImg>\n            )}\n            <InfoWrap>\n              <Title>{movieData.title}</Title>\n              <Score>User Score:</Score>\n              <Desc>{movieData.vote_average}</Desc>\n              <Overview>Overview:</Overview>\n              <Desc>{movieData.overview}</Desc>\n              <Genres>Genres:</Genres>\n              <Desc>{genresDetail(movieData.genres)}</Desc>\n            </InfoWrap>\n          </Container>\n        </>\n      )}\n      <LinksMenu>\n        <LinksItem>\n          <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n        </LinksItem>\n        <LinksItem>\n          <StyledLink to={`/movies/${movieId}/reviews`}>Reviews</StyledLink>\n        </LinksItem>\n      </LinksMenu>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export function genresDetail(array) {\n  return array.map(genre => genre.name).join(', ');\n}\n"],"names":["BASE_URL","API_KEY","getFilmByKeyWord","search","page","url","axios","response","data","toast","getPopular","getFilmDetails","id","getFilmCast","getFilmReview","fetch","json","Container","styled","Title","Score","Overview","Genres","Desc","LinksMenu","LinksItem","PosterImg","InfoWrap","StyledLink","NavLink","Wrap","Button","navigate","useNavigate","state","useLocation","useState","from","setFrom","useEffect","pathname","onClick","type","array","movieData","setMovieData","movieId","useParams","then","poster_path","src","alt","overview","noPoster","title","vote_average","genres","map","genre","name","join","to"],"sourceRoot":""}