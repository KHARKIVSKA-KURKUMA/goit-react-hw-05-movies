{"version":3,"file":"static/js/418.d9a1c709.chunk.js","mappings":"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","sources":["API/fetchMovie.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nasync function getFilmByKeyWord(search, page) {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en&page=${page}&include_adult=false&query=${search}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmByKeyWord };\nasync function getPopular() {\n  try {\n    const url = `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\n\nexport { getPopular };\n\nasync function getFilmDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmDetails };\n\nasync function getFilmCast(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmCast };\n\nasync function getFilmReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmReview };\n","import styled from 'styled-components';\n\nexport const StyledUL = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-left: 20px;\n  margin-right: 60px;\n`;\n\nexport const StyledLI = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const StyledUserPic = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nexport const StyledName = styled.h3`\n  font-size: 1.2rem;\n  margin: 5px 0;\n`;\n\nexport const StyledUsername = styled.p`\n  font-size: 0.9rem;\n  margin: 0;\n  color: #888;\n`;\n\nexport const StyledContent = styled.p`\n  font-size: 1rem;\n  margin: 10px 0;\n`;\n\nexport const StyledImg = styled.img`\n  margin-top: 10px;\n  display: block;\n  height: auto;\n  margin: 0 auto;\n`;\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  StyledUL,\n  StyledLI,\n  StyledImg,\n  StyledUserPic,\n  StyledName,\n  StyledUsername,\n  StyledContent,\n  StyledDiv,\n} from './Reviews.styled';\nimport NoReviews from '../../img/noReview.png';\nimport { getFilmReview } from 'API/fetchMovie';\nimport { useParams } from 'react-router-dom';\nimport noPhoto from 'img/photoNotAvailable.jpg';\n\nconst Reviews = () => {\n  const [reviewArr, setReviewArr] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getFilmReview(movieId).then(({ results }) => setReviewArr(results));\n  }, [movieId]);\n\n  return (\n    <StyledUL>\n      {reviewArr.length !== 0 ? (\n        reviewArr.map(({ author, author_details, name, content, id }) => (\n          <StyledLI key={id}>\n            <StyledDiv>\n              {author_details.avatar_path ? (\n                author_details.avatar_path.includes('secure.gravatar.com') ? (\n                  <StyledUserPic\n                    src={`${author_details.avatar_path.substring(1)}`}\n                    alt={name}\n                  />\n                ) : (\n                  <StyledUserPic\n                    src={`https://themoviedb.org/t/p/w500${author_details.avatar_path}`}\n                    alt={name}\n                  />\n                )\n              ) : (\n                <StyledUserPic src={noPhoto} alt=\"No photo\" />\n              )}\n\n              <div>\n                <StyledName>{name ?? author}</StyledName>\n                <StyledUsername>{author_details.username}</StyledUsername>\n              </div>\n            </StyledDiv>\n            <StyledContent>{content}</StyledContent>\n          </StyledLI>\n        ))\n      ) : (\n        <StyledImg\n          src={NoReviews}\n          alt=\"I apologize for the inconvenience. We would like to notify you that we currently do not have any reviews to display.\"\n        />\n      )}\n    </StyledUL>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getFilmByKeyWord","search","page","url","axios","response","data","toast","getPopular","getFilmDetails","id","getFilmCast","getFilmReview","fetch","json","StyledUL","styled","StyledLI","StyledUserPic","StyledName","StyledUsername","StyledContent","StyledImg","StyledDiv","useState","reviewArr","setReviewArr","movieId","useParams","useEffect","then","results","length","map","author","author_details","name","content","avatar_path","includes","src","substring","alt","noPhoto","username","NoReviews"],"sourceRoot":""}