{"version":3,"file":"static/js/96.74c5582c.chunk.js","mappings":"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","sources":["API/fetchMovie.js","components/Movies/Movies.styled.jsx","additional/truncateTitle.js","components/Movies/MovieGallery.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nasync function getFilmByKeyWord(search) {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en&page=1&include_adult=false&query=${search}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmByKeyWord };\nasync function getPopular() {\n  try {\n    const url = `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\n\nexport { getPopular };\n\nasync function getFilmDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmDetails };\n\nasync function getFilmCast(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmCast };\n\nasync function getFilmReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmReview };\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 12px;\n  max-width: 400px;\n  font-size: 16px;\n  border: none;\n  border-radius: 30px;\n  background-color: #f2f2f2;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  outline: none;\n  flex-grow: 1;\n\n  &::placeholder {\n    color: #aaa;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  background-color: #0dbf40;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  margin-left: 8px;\n  border-radius: 30px;\n  &:hover {\n    background-color: #008409;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px;\n  max-width: 300px;\n  border-radius: 5px;\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const MovieTitle = styled.span`\n  font-size: 18px;\n  color: #000000;\n  padding: 15px 10px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 380px;\n`;\nexport const LinkToMovie = styled(Link)`\n  text-decoration: none;\n`;\n","export const truncateTitle = (title, maxLength) => {\n  if (title.length > maxLength) {\n    return title.slice(0, maxLength) + '...';\n  }\n  return title;\n};\n","import { truncateTitle } from 'additional/truncateTitle';\nimport {\n  MovieImage,\n  MovieItem,\n  MovieList,\n  MovieTitle,\n  LinkToMovie,\n} from './Movies.styled';\nimport noPoster from 'img/noposter.jpg';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieGallery = ({ array }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {array &&\n        array.map(({ title, name, id, overview, poster_path }) => (\n          <MovieItem key={id}>\n            <LinkToMovie to={`/movies/${id}`} state={{ from: location }}>\n              {poster_path !== null ? (\n                <MovieImage\n                  src={`https://themoviedb.org/t/p/w500${poster_path}`}\n                  alt={overview}\n                />\n              ) : (\n                <MovieImage src={noPoster} alt={title} />\n              )}\n              <MovieTitle>{truncateTitle(title ?? name, 18)}</MovieTitle>\n            </LinkToMovie>\n          </MovieItem>\n        ))}\n    </MovieList>\n  );\n};\n\nexport default MovieGallery;\n","import { useState } from 'react';\nimport { FormContainer, SearchButton, SearchInput } from './Movies.styled';\nimport { getFilmByKeyWord } from 'API/fetchMovie';\nimport MovieGallery from './MovieGallery';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  /* ---------------------------------- STATE --------------------------------- */\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchArr, setSearchArr] = useState([]);\n  /* --------------------------------- SUBMIT --------------------------------- */\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      return toast.error('Enter correct query');\n    }\n    getFilmByKeyWord(searchQuery).then(({ results }) => {\n      if (!results || results.length === 0) {\n        toast.error('Oops. Did not match any movies.');\n      }\n      setSearchArr(results);\n    });\n    setSearchQuery('');\n  };\n  /* --------------------------------- CHANGE --------------------------------- */\n  const handleChange = ({ currentTarget: { value } }) => {\n    const searchValue = value.toLowerCase();\n    setSearchQuery(searchValue);\n  };\n  /* --------------------------------- RENDER --------------------------------- */\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormContainer>\n          <SearchInput\n            type=\"text\"\n            name=\"searchQuery\"\n            value={searchQuery}\n            onChange={handleChange}\n            placeholder=\"Search...\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </FormContainer>\n      </form>\n      <MovieGallery array={searchArr} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getFilmByKeyWord","search","url","axios","response","data","toast","getPopular","getFilmDetails","id","getFilmCast","getFilmReview","fetch","json","FormContainer","styled","SearchInput","SearchButton","MovieList","MovieItem","MovieTitle","MovieImage","LinkToMovie","Link","truncateTitle","title","maxLength","length","slice","array","location","useLocation","map","name","overview","poster_path","to","state","from","src","alt","noPoster","useState","searchQuery","setSearchQuery","searchArr","setSearchArr","onSubmit","e","preventDefault","trim","then","results","type","value","onChange","searchValue","currentTarget","toLowerCase","placeholder"],"sourceRoot":""}