{"version":3,"file":"static/js/103.028e03c5.chunk.js","mappings":"6TAGMA,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,EAAiB,EAAjBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,EAAQC,GAAxC,yFAEUC,EAFV,UAEmBL,EAFnB,gCAEmDC,EAFnD,6BAE+EG,EAF/E,sCAEiHD,GAFjH,SAG2BG,EAAAA,EAAAA,IAAUD,GAHrC,cAGUE,EAHV,gBAIiBA,EAASC,KAJ1B,0EAMIC,EAAAA,GAAAA,MAAY,2BANhB,0FAUeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,sGAEUL,EAFV,UAEmBL,EAFnB,oCAEuDC,EAFvD,yBAG2BK,EAAAA,EAAAA,IAAUD,GAHrC,cAGUE,EAHV,gBAIiBA,EAASC,KAJ1B,0EAMIC,EAAAA,GAAAA,MAAY,2BANhB,0FAYeE,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,yFAEUP,EAFV,UAEmBL,EAFnB,kBAEqCY,EAFrC,oBAEmDX,GAFnD,SAG2BK,EAAAA,EAAAA,IAAUD,GAHrC,cAGUE,EAHV,gBAIiBA,EAASC,KAJ1B,0EAMIC,EAAAA,GAAAA,MAAY,2BANhB,0FAWeI,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BD,GAA3B,yFAEUP,EAFV,UAEmBL,EAFnB,kBAEqCY,EAFrC,4BAE2DX,GAF3D,SAG2BK,EAAAA,EAAAA,IAAUD,GAHrC,cAGUE,EAHV,gBAIiBA,EAASC,KAJ1B,0EAMIC,EAAAA,GAAAA,MAAY,2BANhB,0FAWeK,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BF,GAA7B,yFAEUP,EAFV,UAEmBL,EAFnB,kBAEqCY,EAFrC,4BAE2DX,GAF3D,SAG2Bc,MAAMV,GAHjC,cAGUE,EAHV,yBAIWA,EAASS,QAJpB,gCAMIP,EAAAA,GAAAA,MAAY,2BANhB,gF,mIC/CaQ,EAAgBC,EAAAA,GAAAA,KAAH,0CAIbC,EAAmBD,EAAAA,GAAAA,QAAH,qHAOhBE,EAAUF,EAAAA,GAAAA,GAAH,uFAMPG,EAAOH,EAAAA,GAAAA,GAAH,2IAQJI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,uZ,6BCQrB,EAzBa,WACX,IAAMM,GAAWC,EAAAA,EAAAA,MAEjB,GAAgDC,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,MAAaoB,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBH,EAAoBG,EAArC,GACnB,KAGC,SAACd,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAS,oBACT,SAACC,EAAD,UACGM,EAAiBK,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,cAAetB,EAAlC,EAAkCA,GAAlC,OACpB,SAACU,EAAD,CAAUa,GAAE,kBAAavB,GAAMwB,MAAO,CAAEC,KAAMb,GAA9C,gBACGS,QADH,IACGA,EAAAA,EAAkBC,GAD0CtB,EAD3C,UAS/B,C","sources":["API/fetchMovie.js","components/Home/Home.styled.jsx","components/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nasync function getFilmByKeyWord(search, page) {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en&page=${page}&include_adult=false&query=${search}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmByKeyWord };\nasync function getPopular() {\n  try {\n    const url = `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\n\nexport { getPopular };\n\nasync function getFilmDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmDetails };\n\nasync function getFilmCast(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return await response.data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmCast };\n\nasync function getFilmReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n}\nexport { getFilmReview };\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MainContainer = styled.main`\n  padding: 20px;\n`;\n\nexport const SectionContainer = styled.section`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Heading = styled.h1`\n  margin: 0 0 10px;\n  font-size: 38px;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 10px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #faf4c7;\n  padding: 15px;\n  height: 100px;\n  text-decoration: none;\n  color: #000000;\n  font-size: 18px;\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import { getPopular } from 'API/fetchMovie';\nimport {\n  Heading,\n  List,\n  ListItem,\n  MainContainer,\n  SectionContainer,\n} from './Home.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const location = useLocation();\n  /* ---------------------------------- STATE --------------------------------- */\n  const [popularMoviesArr, setPopularMoviesArr] = useState([]);\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    getPopular().then(({ results }) => setPopularMoviesArr(results));\n  });\n  /* --------------------------------- RENDER --------------------------------- */\n  return (\n    <MainContainer>\n      <SectionContainer>\n        <Heading>Trending Today</Heading>\n        <List>\n          {popularMoviesArr.map(({ original_title, original_name, id }) => (\n            <ListItem to={`/movies/${id}`} state={{ from: location }} key={id}>\n              {original_title ?? original_name}\n            </ListItem>\n          ))}\n        </List>\n      </SectionContainer>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","getFilmByKeyWord","search","page","url","axios","response","data","toast","getPopular","getFilmDetails","id","getFilmCast","getFilmReview","fetch","json","MainContainer","styled","SectionContainer","Heading","List","ListItem","Link","location","useLocation","useState","popularMoviesArr","setPopularMoviesArr","useEffect","then","results","map","original_title","original_name","to","state","from"],"sourceRoot":""}